struc piece{
    int team
    string class 
}

FONCTION : construct
    input :
        int team
        string class
    output :
        piece newPiece
    DEBUT
        newPiece.class = class
        newPiece.team = team
        retourne newPiece
    Fin
FIN FONCTION

FONCTION : initiateBoard
    input
    output
    VARIABLE
    int i
    DEBUT
        POUR (i allant de 0 Ã  7) FAIRE //build pawn for blue and red team
            board[1][i] = construct(1,"pawn")
            board[6][i] = construct(2,"pawn")
        FIN POUR

    //build rook for red team
    board[0][0]=construct(1,"rook")
    board[0][7]=construct(1,"rook")

    //build rook for blue team
    board[7][0]=construct(2,"rook")
    board[7][7]=construct(2,"rook")

    //build knight for red team
    board[0][1]=construct(1,"knight")
    board[0][6]=construct(1,"knight")
    
    //build knight for blue team
    board[7][1]=construct(2,"knight")
    board[7][6]=construct(2,"knight")

    //build bishop for red team
    board[0][2]=construct(1,"bishop")
    board[0][5]=construct(1,"bishop")

    //build bishop for blue team
    board[7][2]=construct(2,"bishop")
    board[7][5]=construct(2,"bishop")

    //build queen for red team
    board[0][3]=construct(1,"queen")

    //build queen for blue team
    board[7][3]=construct(2,"queen")
    
    //build king for red team
    board[0][4]=construct(1,"king")

    //build king for blue team
    board[7][4]=construct(2,"king")

    FIN
FIN FONCTION

FONCTION : buildBoard
    input
    output
    VARIABLE
    int i
    DEBUT
        affiche("    ")
    for (int i = 0 i < 8 i++){
        affiche(convertionASCII(65+i))
    }

    affiche(RETOUR_A_LA_LIGNE)

    POUR (int i = 0 i < 8 i++){
        affiche(RETOUR_A_LA_LIGNE)
        affiche("   "+i)

        POUR (int j = 0 j < 8 j++) FAIRE
            
            SI (board[i][j].class == "pawn"){
                affiche("   P")
            FIN SI
            SI (board[i][j].class == "rook") ALORS
                affiche("   R")
            FIN SI
            SI (board[i][j].class == "knight") ALORS
                affiche("   N")
            FIN SI
            SI (board[i][j].class == "bishop") ALORS
                affiche("   B")
            FIN SI
            SI (board[i][j].class == "queen") ALORS
                affiche("   Q")
            FIN SI
            SI (board[i][j].class == "king") ALORS
                affiche("   K")
            FIN SI
            SI (board[i][j].class == NULL) ALORS
                affiche("   X")
            FIN SI
        FIN POUR
        affiche("   "+i)
        affiche(RETOUR_A_LA_LIGNE)
    FIN POUR
    affiche(RETOUR_A_LA_LIGNE)
    affiche("    ")
    POUR (i allant de 0 a 7) FAIRE
        affiche(convertionASCII(65+i))
    FIN POUR

    FIN
FIN FONCTION

FONCTION: main
    Variable
    
    DEBUT
        initiateBoard()
        BuildBoard()
    FIN
FIN fonction